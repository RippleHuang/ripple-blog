(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{620:function(e,t,v){e.exports=v.p+"assets/img/git.ee074e2b.png"},643:function(e,t,v){"use strict";v.r(t);var _=v(4),i=Object(_.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("div",{staticClass:"custom-block tip"},[_("p",[e._v("git 远程仓库及操作")])]),e._v(" "),_("h2",{attrs:{id:"远程仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[e._v("#")]),e._v(" 远程仓库")]),e._v(" "),_("h3",{attrs:{id:"图解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图解"}},[e._v("#")]),e._v(" 图解")]),e._v(" "),_("p",[_("img",{attrs:{src:v(620),alt:"alt Git"}})]),e._v(" "),_("h3",{attrs:{id:"创建本地仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建本地仓库"}},[e._v("#")]),e._v(" 创建本地仓库")]),e._v(" "),_("ul",[_("li",[e._v("git init")]),e._v(" "),_("li",[e._v("git add")]),e._v(" "),_("li",[e._v('git commit -m "xxx"')])]),e._v(" "),_("h3",{attrs:{id:"配置远程仓库-配别名和用户信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置远程仓库-配别名和用户信息"}},[e._v("#")]),e._v(" 配置远程仓库(配别名和用户信息)")]),e._v(" "),_("ul",[_("li",[e._v("添加一个新的远程仓库："),_("code",[e._v("git remote add [remote name] github上的https")])]),e._v(" "),_("li",[e._v("显示远程仓库使用的 git 别名与 url："),_("code",[e._v("git remote -v")])]),e._v(" "),_("li",[e._v("查看远程仓库更多信息："),_("code",[e._v("git remote show [remote name]")])]),e._v(" "),_("li",[e._v("重命名："),_("code",[e._v("git remote rename [old remote name] [new remote name]")])]),e._v(" "),_("li",[e._v("移除一个远程仓库 "),_("code",[e._v("git remote rm [remote name]")])]),e._v(" "),_("li",[e._v("查看远程所有分支,r为remote "),_("code",[e._v("git branch -r")])]),e._v(" "),_("li",[e._v("查看本地和远程的所有分支，a为all "),_("code",[e._v("git branch -a")])]),e._v(" "),_("li",[e._v("删除远程分支，删除后还需推送到服务器 "),_("code",[e._v("git branch -d -r <branchname>")])]),e._v(" "),_("li",[e._v("删除后推送至服务器 "),_("code",[e._v("git push origin:<branchname>")])])]),e._v(" "),_("h3",{attrs:{id:"推送本地仓库到远程仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#推送本地仓库到远程仓库"}},[e._v("#")]),e._v(" 推送本地仓库到远程仓库")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("git push -u [remote name] [branch name]")])])]),e._v(" "),_("h3",{attrs:{id:"克隆远程仓库到本地"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#克隆远程仓库到本地"}},[e._v("#")]),e._v(" 克隆远程仓库到本地")]),e._v(" "),_("ul",[_("li",[e._v("git clone url(克隆时不需要 "),_("code",[e._v("git init")]),e._v(")默认克隆时为远程仓库起的别名为 origin，想要修改这个名字可以 "),_("code",[e._v("git clone -o name")])])]),e._v(" "),_("h3",{attrs:{id:"邀请成员加入团队"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#邀请成员加入团队"}},[e._v("#")]),e._v(" 邀请成员加入团队")]),e._v(" "),_("ul",[_("li",[e._v("去远程仓库项目设置中的 collaboration 去邀请")])]),e._v(" "),_("h3",{attrs:{id:"拉取最新更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#拉取最新更新"}},[e._v("#")]),e._v(" 拉取最新更新")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("git fetch [remote name]")]),e._v(" 将某个远程主机的更新全部取回本地")]),e._v(" "),_("li",[_("code",[e._v("git fetch [remote name] [branch name]")]),e._v(" 取回特定分支的更新，可以指定分支名")]),e._v(" "),_("li",[_("code",[e._v("git log -p FETCH_HEAD")]),e._v(" 查看刚取回的更新信息")]),e._v(" "),_("li",[_("code",[e._v("git merge [branch name]")]),e._v(" 当前分支合并远程分支")])]),e._v(" "),_("h3",{attrs:{id:"流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[e._v("#")]),e._v(" 流程")]),e._v(" "),_("ul",[_("li",[e._v("初始化远程仓库：一定要初始化一个空的仓库，在 github 上操作")]),e._v(" "),_("li",[e._v("创建本地仓库\n"),_("ul",[_("li",[_("code",[e._v("git remote add 别名 仓库地址(https)")])]),e._v(" "),_("li",[_("code",[e._v("git init")]),e._v(" :复制源码")]),e._v(" "),_("li",[e._v("修改用户名 修改邮箱")]),e._v(" "),_("li",[_("code",[e._v("git add")])]),e._v(" "),_("li",[_("code",[e._v("git commit")])])])]),e._v(" "),_("li",[e._v("推送本地仓库到远程仓库\n"),_("ul",[_("li",[e._v("清理 Windows 凭据")]),e._v(" "),_("li",[_("code",[e._v("git push -u [remote name] [branch name]")]),e._v(" (会弹出输入框，用户名，密码)推送完后会附带生成远程跟踪分支")])])]),e._v(" "),_("li",[e._v("项目邀请成员\n"),_("ul",[_("li",[e._v("在 github 上操作")])])]),e._v(" "),_("li",[e._v("成员克隆远程仓库\n"),_("ul",[_("li",[_("code",[e._v("git clone 仓库地址")]),e._v(" 在本地生成了.git 文件 默认为远程仓库配了别名 origin，只有在克隆的时候 本地分支 和 远程跟踪分支是有同步的关系")])])]),e._v(" "),_("li",[e._v("成员做出贡献\n"),_("ul",[_("li",[e._v("修改源码文件")]),e._v(" "),_("li",[_("code",[e._v("git add")])]),e._v(" "),_("li",[_("code",[e._v("git commit")])]),e._v(" "),_("li",[_("code",[e._v("git push")]),e._v(" (会弹出输入框，用户名，密码)推送完后会附带生成远程跟踪分支")])])])]),e._v(" "),_("h2",{attrs:{id:"推送其他分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#推送其他分支"}},[e._v("#")]),e._v(" 推送其他分支")]),e._v(" "),_("ul",[_("li",[e._v("想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上，本地的分支并不会自动与远程仓库同步，必须显式地推送要分享的分支")]),e._v(" "),_("li",[e._v("推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支："),_("code",[e._v("git push origin serverfix")])]),e._v(" "),_("li",[e._v("不想这个分支叫这个可以更改："),_("code",[e._v("git push origin serverfix:修改名")])]),e._v(" "),_("li",[e._v("拉取远程仓库 origin 有而本地没有的数据 "),_("code",[e._v("git fetch origin")])]),e._v(" "),_("li",[e._v("合并到当前所在分支："),_("code",[e._v("git merge serverfix")])]),e._v(" "),_("li",[e._v("建在远程跟踪分支之上："),_("code",[e._v("git checkout -b [branch] [remotename]/[branch]")])])]),e._v(" "),_("h2",{attrs:{id:"跟踪分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#跟踪分支"}},[e._v("#")]),e._v(" 跟踪分支")]),e._v(" "),_("ul",[_("li",[e._v("从远程跟踪分支检出一个本地分支会自动创建一个跟踪分支，只有主分支并且克隆时才会自动建跟踪分支，跟踪分支是与远程分支有直接关系的本地分支\n"),_("ul",[_("li",[e._v("在一个跟踪分支上输入 "),_("code",[e._v("git pull")]),e._v("，git 能自动识别去哪个服务器上去抓取，合并到哪个分支")]),e._v(" "),_("li",[e._v("完整用法 "),_("code",[e._v("git pull [remote name] [remote branch]:[branch]")]),e._v(" 拉取远程分支与本地某个分支合并")]),e._v(" "),_("li",[e._v("冒号后可省略 "),_("code",[e._v("git pull [remote name] [remote branch]")]),e._v("拉取远程分支与此分支合并")]),e._v(" "),_("li",[e._v("完整 pull 用法与这两个操作一致"),_("code",[e._v("git fetch [remote name] [remote branch]:[branch]")]),e._v(" "),_("code",[e._v("git merge [branch]")]),e._v("，但建议用后两个")]),e._v(" "),_("li",[e._v("可以设置其他跟踪分支 "),_("code",[e._v("git checkout -b branch remotename/branch")])]),e._v(" "),_("li",[e._v("可以设置其他跟踪分支："),_("code",[e._v("git checkout --track origin/serverfix")])]),e._v(" "),_("li",[e._v("设置本地分支与远程分支不同名字： "),_("code",[e._v("git checkout -b sf origin/serverfix")])]),e._v(" "),_("li",[e._v("若已有本地分支跟踪一个刚刚拉取下来的远程分支，要修改正在跟踪的分支，可以使用 "),_("code",[e._v("-u")]),e._v(" 选项运行"),_("code",[e._v("git branch")]),e._v("显示设置: "),_("code",[e._v("git branch -u origin/serverfix")])]),e._v(" "),_("li",[e._v("查看设置的所有跟踪分支："),_("code",[e._v("git branch -vv")])])])])]),e._v(" "),_("h2",{attrs:{id:"远程跟踪分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#远程跟踪分支"}},[e._v("#")]),e._v(" 远程跟踪分支")]),e._v(" "),_("ul",[_("li",[e._v("远程跟踪分支是远程分支状态的引用，他们是不能移动的本地分支，当做任何网络通信操作时，会自动移动，以 remote/tranch 形式命名，如 origin/master")]),e._v(" "),_("li",[e._v("当克隆一个仓库时，自动会创建一个跟踪 origin/master 的 master 分支")]),e._v(" "),_("li",[e._v("例子：从一个 git 服务器那里克隆，git 的 clone 命令自动将其命名为 origin，创建一个指向它的 master 分支的指针，本地会将其命名为 origin/master，同时本地也命名一个 master 分支，与 origin/master 分支指向同一个地方")])]),e._v(" "),_("h2",{attrs:{id:"本地分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#本地分支"}},[e._v("#")]),e._v(" 本地分支")]),e._v(" "),_("ul",[_("li",[e._v("正常的数据推送 和拉取步骤\n"),_("ul",[_("li",[e._v("确保本地分支已经跟踪了远程跟踪分支")]),e._v(" "),_("li",[e._v("拉取数据： git pull")]),e._v(" "),_("li",[e._v("上传数据： git push")])])]),e._v(" "),_("li",[e._v("本地分支怎么去跟踪一个远程跟踪分支\n"),_("ul",[_("li",[e._v("当克隆的时候 会自动生成一个 master 本地分支(已经跟踪了对应的远程跟踪分支)")]),e._v(" "),_("li",[e._v("在新建其他分支时 可以指定想要跟踪的远程跟踪分支\n"),_("code",[e._v("git checkout -b [branch] [remotename]/[branch]")]),e._v(" "),_("code",[e._v("git checkout --track [remotename]/[branch]")])]),e._v(" "),_("li",[e._v("将一个已经存在的本地分支改为一个跟踪分支\n"),_("code",[e._v("git branch -u [remotename]/[branch]")])])])])]),e._v(" "),_("h3",{attrs:{id:"冲突"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#冲突"}},[e._v("#")]),e._v(" 冲突")]),e._v(" "),_("ul",[_("li",[e._v("push 冲突:商量修改文件 "),_("code",[e._v("git add ./")])]),e._v(" "),_("li",[e._v("pull 冲突:商量修改文件 "),_("code",[e._v("git add ./")])])]),e._v(" "),_("h3",{attrs:{id:"删除远程分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[e._v("#")]),e._v(" 删除远程分支")]),e._v(" "),_("ul",[_("li",[e._v("删除："),_("code",[e._v("git push origin -d serverfix")])]),e._v(" "),_("li",[e._v("列出仍在远程跟踪但是远程已被移除的无用分类："),_("code",[e._v("git remote prune origin --dry-run")])]),e._v(" "),_("li",[e._v("清除上面命令列出来的远程跟踪："),_("code",[e._v("git remote prune origin")])])]),e._v(" "),_("h2",{attrs:{id:"pull-request-流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pull-request-流程"}},[e._v("#")]),e._v(" pull request 流程")]),e._v(" "),_("ul",[_("li",[e._v("概念：可以进行 fork 派生，人们可以将修改推送到派生出的项目副本中。并通过创建合并请求 pull request 让他们的修改进入源版本库")]),e._v(" "),_("li",[e._v("从 master 分支创建一个新分支，提交修改，分支推送到 github，创建一个合并请求，讨论，最后项目拥有者合并或关闭你的合并请求")])]),e._v(" "),_("h2",{attrs:{id:"ssh-密钥"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ssh-密钥"}},[e._v("#")]),e._v(" SSH 密钥")]),e._v(" "),_("ul",[_("li",[e._v("生成密钥："),_("code",[e._v("cmd 命令： ssh-keygen -t rsa -C 邮箱地址")])]),e._v(" "),_("li",[e._v("生成私钥和公钥，把公钥贴到 github 中")]),e._v(" "),_("li",[e._v("如果是码云的话，还需要执行命令行 "),_("code",[e._v("ssh -T git@gitee.com")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);